{"version":3,"sources":["components/bookShelfChanger.component.jsx","components/book.component.jsx","components/loader.component.jsx","BooksAPI.js","components/search.component.jsx","components/bookShelf.component.jsx","components/booksList.component.jsx","App.js","index.js"],"names":["BookShelfChanger","_ref","book","onShelfChange","react_default","a","createElement","className","value","shelf","onChange","e","target","disabled","Book","title","_book$authors","authors","imageLinks","style","width","height","backgroundImage","concat","thumbnail","bookShelfChanger_component","map","author","key","Loader","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","Search","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchText","books","loading","myref","React","createRef","current","focus","_","prevState","query","_this2","trim","setState","data","error","_this3","_this$props","props","myBooks","react_router_dom","to","type","ref","placeholder","loader_component","searchBook","forEach","myBook","book_component","Component","BookShelf","filter","b","shelfState","CURRENTLY_READING","WANT_TO_READ","READ","NONE","BookList","bookShelf_component","BooksApp","changeShelf","BooksAPI","catch","err","console","log","filteredBooks","toConsumableArray","react_router","path","search_component","booksList_component","assign","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.50cbbf13.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction BookShelfChanger({ book, onShelfChange }) {\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select\r\n        // to set default shelf value\r\n        value={book.shelf || \"none\"}\r\n        onChange={(e) => onShelfChange(book, e.target.value)}\r\n      >\r\n        <option value=\"move\" disabled>\r\n          Move to...\r\n        </option>\r\n        <option value=\"currentlyReading\">Currently Reading</option>\r\n        <option value=\"wantToRead\">Want to Read</option>\r\n        <option value=\"read\">Read</option>\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookShelfChanger;\r\n","import React from \"react\";\r\nimport BookShelfChanger from \"./bookShelfChanger.component\";\r\n//some books come with out authors so i set default value for authors\r\nfunction Book({ book, onShelfChange }) {\r\n  const { title, authors = [], imageLinks } = book;\r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 193,\r\n            // some books come without imageLinks proprty\r\n            backgroundImage: `url(${imageLinks && imageLinks.thumbnail})`,\r\n          }}\r\n        />\r\n        <BookShelfChanger book={book} onShelfChange={onShelfChange} />\r\n      </div>\r\n      <div className=\"book-title\">{title}</div>\r\n      {/* authors come as an array with one or more author*/}\r\n      {authors.map((author) => (\r\n        <div key={author} className=\"book-authors\">\r\n          {author}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\n\r\n// component for loading animation\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-ellipsis\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./book.component\";\r\nimport Loader from \"./loader.component\";\r\nimport * as bookApi from \"../BooksAPI\";\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.myref = React.createRef();\r\n  }\r\n  state = {\r\n    searchText: \"\",\r\n    books: [],\r\n    loading: false,\r\n  };\r\n  componentDidMount() {\r\n    this.myref.current.focus();\r\n  }\r\n  componentDidUpdate(_, prevState) {\r\n    const { searchText } = this.state;\r\n    if (searchText !== prevState.searchText) {\r\n      if (searchText && searchText.trim) {\r\n        this.setState({ loading: true });\r\n        bookApi.search(this.state.searchText).then((res) => {\r\n          const { error } = res;\r\n          if (!error) {\r\n            this.setState({ books: res, loading: false });\r\n          } else {\r\n            this.setState({ books: [], loading: false });\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({ books: [] });\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { books: myBooks, onShelfChange } = this.props;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\" />\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              ref={this.myref}\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.searchText}\r\n              onChange={(e) => this.setState({ searchText: e.target.value })}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {/* using and - or operator to choose which component to render */}\r\n            {(this.state.loading && <Loader />) ||\r\n              this.state.books\r\n                .map((searchBook) => {\r\n                  // using forEach to replace searched books with my Books\r\n                  myBooks.forEach((myBook) => {\r\n                    if (searchBook.id === myBook.id) searchBook = myBook;\r\n                  });\r\n                  return searchBook;\r\n                })\r\n                .map((book) => {\r\n                  return (\r\n                    <Book\r\n                      key={book.id}\r\n                      book={book}\r\n                      onShelfChange={onShelfChange}\r\n                    />\r\n                  );\r\n                })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Book from \"./book.component\";\r\nimport Loader from \"./loader.component\";\r\n\r\nfunction BookShelf({ title, books, filter, loading, onShelfChange }) {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{title}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {(loading && <Loader />) ||\r\n            books\r\n              .filter((book) => book.shelf === filter)\r\n              .map((b) => (\r\n                <Book key={b.id} book={b} onShelfChange={onShelfChange} />\r\n              ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookShelf;\r\n","import React from \"react\";\r\nimport BookShelf from \"./bookShelf.component\";\r\n\r\n// set shelf states as object to avoid type errors\r\nconst shelfState = {\r\n  CURRENTLY_READING: \"currentlyReading\",\r\n  WANT_TO_READ: \"wantToRead\",\r\n  READ: \"read\",\r\n  NONE: \"none\",\r\n};\r\n\r\nfunction BookList({ books, loading, onShelfChange }) {\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <BookShelf\r\n            title=\"Currently Reading\"\r\n            filter={shelfState.CURRENTLY_READING}\r\n            books={books}\r\n            loading={loading}\r\n            onShelfChange={onShelfChange}\r\n          />\r\n          <BookShelf\r\n            title=\"Want To Read\"\r\n            filter={shelfState.WANT_TO_READ}\r\n            books={books}\r\n            loading={loading}\r\n            onShelfChange={onShelfChange}\r\n          />\r\n          <BookShelf\r\n            title=\"Read\"\r\n            filter={shelfState.READ}\r\n            books={books}\r\n            loading={loading}\r\n            onShelfChange={onShelfChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookList;\r\n","import React from \"react\";\r\nimport Search from \"./components/search.component\";\r\nimport BookList from \"./components/booksList.component\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n    loading: true,\r\n  };\r\n  // load books from server\r\n  componentDidMount() {\r\n    this.loading = true;\r\n    BooksAPI.getAll().then((books) => this.setState({ books, loading: false }));\r\n  }\r\n  // update shelf state\r\n  changeShelf = (book, shelf) => {\r\n    BooksAPI.update(book, shelf).catch((err) => {\r\n      console.log(err);\r\n    });\r\n    const filteredBooks = this.state.books.filter(({ id }) => id !== book.id);\r\n    if (shelf === \"none\") {\r\n      this.setState({ books: filteredBooks });\r\n    } else {\r\n      book.shelf = shelf;\r\n      console.log(book);\r\n      this.setState({ books: [...filteredBooks, book] });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/search\">\r\n              <Search\r\n                onShelfChange={this.changeShelf}\r\n                books={this.state.books}\r\n              />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <BookList {...this.state} onShelfChange={this.changeShelf} />\r\n            </Route>\r\n          </Switch>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\" />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}